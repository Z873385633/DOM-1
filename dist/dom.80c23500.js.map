{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","x","array","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call"],"mappings":";AAAAA,OAAOC,IAAM,CACTC,OAAOC,SAAAA,GACGC,IAAAA,EAAYC,SAASC,cAAc,YAElCF,OADPA,EAAUG,UAAYJ,EAAOK,OACtBJ,EAAUK,QAAQC,YAE7BC,MAAMC,SAAAA,EAAMC,GAERD,EAAKE,WAAWC,aAAaF,EAAOD,EAAKI,cAE7CC,OAAOL,SAAAA,EAAMC,GACTD,EAAKE,WAAWC,aAAaF,EAAOD,IAExCM,OAAOC,SAAAA,EAAQP,GACXO,EAAOC,YAAYR,IAEvBS,KAAKT,SAAAA,EAAMO,GACPlB,IAAIgB,OAAOL,EAAMO,GACjBlB,IAAIiB,OAAOC,EAAQP,IAEvBU,OAAOV,SAAAA,GAEIA,OADPA,EAAKE,WAAWS,YAAYX,GACrBA,GAEXY,MAAMZ,SAAAA,GAGKa,IAFDC,IAAAA,EAAQ,GACVD,EAAIb,EAAKF,WACNe,GACHC,EAAMC,KAAK1B,IAAIqB,OAAOV,EAAKF,aAC3Be,EAAIb,EAAKF,WAENgB,OAAAA,GAEXE,KAAKhB,SAAAA,EAAMiB,EAAMC,GACTC,GAAqB,IAArBA,UAAUC,OACVpB,EAAKqB,aAAaJ,EAAMC,QACrB,GAAyB,IAArBC,UAAUC,OACVpB,OAAAA,EAAKsB,aAAaL,IAGjCM,KAAKvB,SAAAA,EAAMT,GACH4B,GAAqB,IAArBA,UAAUC,OACN,cAAepB,EACfA,EAAKwB,UAAYjC,EAEjBS,EAAKyB,YAAclC,OAEpB,GAAyB,IAArB4B,UAAUC,OACb,MAAA,cAAepB,EACRA,EAAKwB,UAELxB,EAAKyB,aAIxBC,KAAK1B,SAAAA,EAAMT,GACH4B,GAAqB,IAArBA,UAAUC,OACVpB,EAAKL,UAAYJ,OACd,GAAyB,IAArB4B,UAAUC,OACVpB,OAAAA,EAAKL,WAGpBgC,MAAM3B,SAAAA,EAAMiB,EAAMC,GACVC,GAAqB,IAArBA,UAAUC,OAEVpB,EAAK2B,MAAMV,GAAQC,OAChB,GAAyB,IAArBC,UAAUC,OAAc,CAC3B,GAAgB,iBAATH,EAEAjB,OAAAA,EAAK2B,MAAMV,GACf,GAAIA,aAAgBW,OAAQ,CACzBC,IAAAA,EAASZ,EACV,IAAA,IAAIa,KAAOD,EACZ7B,EAAK2B,MAAMG,GAAOD,EAAOC,MAKzCC,GAAG/B,SAAAA,EAAMgC,EAAWC,GAChBjC,EAAKkC,iBAAiBF,EAAWC,IAErCE,IAAInC,SAAAA,EAAMgC,EAAWC,GACjBjC,EAAKoC,oBAAoBJ,EAAWC,IAExCI,KAAKC,SAAAA,EAAUC,GACJ,OAACA,GAAS9C,UAAU+C,iBAAiBF,IAEhD/B,OAAOP,SAAAA,GACIA,OAAAA,EAAKE,YAEhBuC,SAASzC,SAAAA,GACEA,OAAAA,EAAKyC,UAEhBC,SAAS1C,SAAAA,GACE2C,OAAAA,MAAMC,KAAK5C,EAAKE,WAAWuC,UAAUI,OAAO,SAAAC,GAAKA,OAAAA,GAAK9C,KAEjE+C,KAAK/C,SAAAA,GAEMa,IADHA,IAAAA,EAAIb,EAAKI,YACNS,GAAoB,IAAfA,EAAEmC,UACVnC,EAAIA,EAAET,aAGd6C,SAASjD,SAAAA,GAEEa,IADHA,IAAAA,EAAIb,EAAKkD,gBACNrC,GAAoB,IAAfA,EAAEmC,UACVnC,EAAIA,EAAEqC,gBAEHrC,OAAAA,GAEXsC,KAAKC,SAAAA,EAAUnB,GACN,IAAA,IAAIoB,EAAI,EAAGA,EAAID,EAAShC,OAAQiC,IACjCpB,EAAGqB,KAAK,KAAMF,EAASC","file":"dom.80c23500.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string) {\r\n        const container = document.createElement('template')\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild\r\n    },\r\n    after(node, node2) {       //把node2节点放到node节点之前\r\n        // console.log(node.nextSibling)\r\n        node.parentNode.insertBefore(node2, node.nextSibling)\r\n    },\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node)\r\n    },\r\n    append(parent, node) {\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node, parent) {\r\n        dom.before(node, parent)\r\n        dom.append(parent, node)\r\n    },\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node) {\r\n        const array = []\r\n        let x = node.firstChild\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n    attr(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node, string) {\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string\r\n            } else {\r\n                node.textContent = string\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            //dom.style(div,''color','red')\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                //dom.style(div,'color')\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node) {\r\n        return node.parentNode\r\n    },\r\n    children(node) {\r\n        return node.children\r\n    },\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children).filter(n => n != node)\r\n    },\r\n    next(node) {\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n    },\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n}\r\n"]}